max <- 0
for (i in 1:100000) {
fathers_h <- rnorm(1000, mean, sd)
mean_f <- mean(fathers_h)
son_h <- rnorm(1000, mean, sd)
mean_s <- mean(son_h)
diff_now <- mean_s - mean_f
if (abs(diff_now) > max){
max = abs(diff_now)
}
}
max <- 0
for (i in 1:70000) {
fathers_h <- rnorm(1000, mean, sd)
mean_f <- mean(fathers_h)
son_h <- rnorm(1000, mean, sd)
mean_s <- mean(son_h)
diff_now <- mean_s - mean_f
if (abs(diff_now) > max){
max = abs(diff_now)
}
}
max
max <- 0
for (i in 1:100000) {
fathers_h <- rnorm(1000, mean, sd)
mean_f <- mean(fathers_h)
son_h <- rnorm(1000, mean, sd)
mean_s <- mean(son_h)
diff_now <- mean_s - mean_f
if (abs(diff_now) > max){
max = abs(diff_now)
}
}
max
max <- 0
for (i in 1:200000) {
fathers_h <- rnorm(1000, mean, sd)
mean_f <- mean(fathers_h)
son_h <- rnorm(1000, mean, sd)
mean_s <- mean(son_h)
diff_now <- mean_s - mean_f
if (abs(diff_now) > max){
max = abs(diff_now)
}
}
max
max <- 0
for (i in 1:200000) {
fathers_h <- rnorm(1000, mean, sd)
mean_f <- mean(fathers_h)
son_h <- rnorm(1000, mean, sd)
mean_s <- mean(son_h)
diff_now <- mean_s - mean_f
if (abs(diff_now) > max){
max = abs(diff_now)
}
}
max
max <- 0
for (i in 1:500000) {
fathers_h <- rnorm(1000, mean, sd)
mean_f <- mean(fathers_h)
son_h <- rnorm(1000, mean, sd)
mean_s <- mean(son_h)
diff_now <- mean_s - mean_f
if (abs(diff_now) > max){
max = abs(diff_now)
}
}
max
max <- 0
for (i in 1:100000) {
fathers_h <- rnorm(1000, mean, sd)
mean_f <- mean(fathers_h)
son_h <- rnorm(1000, mean, sd)
mean_s <- mean(son_h)
diff_now <- mean_s - mean_f
if (abs(diff_now) > max){
max = abs(diff_now)
}
}
max
size <- nrow(father)
s_var <- var(s_height)
f_var <- var(f_height)
df <- size + size -2
t <- (mean(s_height) - mean(f_height)) / sqrt(s_var / size + f_var / size)
t
all <- c(f_height, s_height)
mean <- mean(all)
sd <- sd(all)
mean
sd
fathers <- rnorm(1000, mean, sd)
f_mean <- mean(fathers)
sons <- rnorm(1000, mean, sd)
s_mean <- mean(sons)
difference <- s_mean - f_mean
difference
max <- 0
for (i in 1:1000000) {
fathers_h <- rnorm(1000, mean, sd)
mean_f <- mean(fathers_h)
son_h <- rnorm(1000, mean, sd)
mean_s <- mean(son_h)
diff_now <- mean_s - mean_f
if (abs(diff_now) > max){
max = abs(diff_now)
}
}
max
max <- 0
for (i in 1:1000000) {
fathers_h <- rnorm(1000, mean, sd)
mean_f <- mean(fathers_h)
son_h <- rnorm(1000, mean, sd)
mean_s <- mean(son_h)
diff_now <- mean_s - mean_f
if (abs(diff_now) > max){
max = abs(diff_now)
}
}
max <- 0
for (i in 1:1000000) {
fathers_h <- rnorm(1000, mean, sd)
mean_f <- mean(fathers_h)
son_h <- rnorm(1000, mean, sd)
mean_s <- mean(son_h)
diff_now <- mean_s - mean_f
if (abs(diff_now) > max){
max = abs(diff_now)
}
}
max
dim(iris)
setosa <- iris[iris$Species == 'setosa', ]
plot(petal.Width ~ Petal.Length, data = setosa)
plot(Petal.Width ~ Petal.Length, data = setosa)
plot(Sepal.Width ~ Sepal.Length, data = setosa)
setosa$predict <- beta0 + beta1*setosa$Sepal.Length
head(setosa)
beta0 <- 0
beta1 <- 1
setosa$predict <- beta0 + beta1*setosa$Sepal.Length
head(setosa)
lines(predict ~ Sepal.Length, data = setosa)
lines(predict ~ Sepal.Length, data = setosa)
beta0 <- -2
beta1 <- 1
setosa$predict <- beta0 + beta1*setosa$Sepal.Length
head(setosa)
lines(predict ~ Sepal.Length, data = setosa)
##manually create regression line
beta0 <- -2
setosa$predict <- beta0 + beta1*setosa$Sepal.Length
lines(predict ~ Sepal.Length, data = setosa, col = 'blue')
beta0 <- -1.5
beta1 <- 0.8
setosa$predict <- beta0 + beta1*setosa$Sepal.Length
head(setosa)
lines(predict ~ Sepal.Length, data = setosa, col = 'yellow')
beta0 <- -1.5
beta1 <- 1.2
setosa$predict <- beta0 + beta1*setosa$Sepal.Length
head(setosa)
lines(predict ~ Sepal.Length, data = setosa, col = 'red')
beta0 <- -2.2
beta1 <- 1.2
setosa$predict <- beta0 + beta1*setosa$Sepal.Length
head(setosa)
lines(predict ~ Sepal.Length, data = setosa, col = 'green')
## compute error
mean((setosa$Sepal.Width - setosa$predict)^2)
beta0 <- -2.2
beta1 <- 1
setosa$predict <- beta0 + beta1*setosa$Sepal.Length
head(setosa)
lines(predict ~ Sepal.Length, data = setosa, col = 'black')
beta0 <- -2.2
beta1 <- 1.1
setosa$predict <- beta0 + beta1*setosa$Sepal.Length
head(setosa)
lines(predict ~ Sepal.Length, data = setosa, col = 'black')
mean((setosa$Sepal.Width - setosa$predict)^2)
test <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(abs(resi))
print(mse)
}
test_mean <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(abs(resi))
print(mse)
}
test <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(resi ^ 2)
print(mse)
}
test(-1, 0.9)
knitr::opts_chunk$set(echo = TRUE)
sample <- read.csv('sample.csv',  sep = '\t')
plot(y ~ x, data = sample)
plot(y ~ x, data = sample)
beta0 <- -1
beta1 <- 1
sample$predict <- beta0 + beta1 * sample$x
sample$residual <- sample$predict - sample$y
mse <- mean(sample$residual^2)
mse
plot(y ~ x, data = sample)
lines(predict ~ x, data = sample, col = 'red')
test <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(resi ^ 2)
print(mse)
}
test(-1, 0.9)
test(-1.2, 0.8)
test(-1.3, 0.8)
test(-1.4, 0.8)
test(-1.5, 0.8)
test(-1.5, 0.7)
test(-1.5, 0.65)
test(-1.5, 0.6)
test(-1.4, 0.58)
test(-1.4, 0.50)
test_plot <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
plot(y ~ x, data = sample)
lines(predict ~ sample$x, col = 'red')
}
test_plot(-1.4, 0.5)
test_mean <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(abs(resi))
print(mse)
}
test_mean(-1.4, 0.5)
test_mean <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(abs(resi))
print(mse)
}
test_mean(-1.4, 0.5)
test_mean(-1.3, 0.5)
test_mean <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(abs(resi))
print(mse)
}
test_mean(-1.4, 0.5)
test_mean(-1.3, 0.5)
test_mean(-1.2, 0.5)
test_mean <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(abs(resi))
print(mse)
}
test_mean(-1.4, 0.5)
test_mean(-1.3, 0.5)
test_mean(-1.3, 0.6)
test_mean <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(abs(resi))
print(mse)
}
test_mean(-1.4, 0.5)
test_mean(-1.3, 0.5)
test_mean(-1.3, 0.7)
test_mean <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(abs(resi))
print(mse)
}
test_mean(-1.4, 0.5)
test_mean(-1.3, 0.5)
test_mean(-1.3, 0.65)
test_mean <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(abs(resi))
print(mse)
}
test_mean(-1.4, 0.5)
test_mean(-1.3, 0.5)
test_mean(-1.2, 0.65)
test_mean <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(abs(resi))
print(mse)
}
test_mean(-1.4, 0.5)
test_mean(-1.3, 0.5)
test_mean(-1.4, 0.65)
test_mean <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(abs(resi))
print(mse)
}
test_mean(-1.4, 0.5)
test_mean(-1.3, 0.5)
test_mean(-1.3, 0.65)
test_mean <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mad <- mean(abs(resi))
print(mad)
}
test_mean(-1.4, 0.5)
test_mean(-1.3, 0.5)
test_mean(-1.3, 0.65)
test_plot(-1.4, 0.5)
predict_mean <- -1.3 + 0.65 * sample$x
lines(predict_mean ~ sample$x, col = 'blue')
test(-1.2, 0.8)
test(-1.3, 0.8)
test(-1.4, 0.8)
test(-1.5, 0.8)
test(-1.5, 0.7)
test(-1.5, 0.65)
test(-1.5, 0.6)
test(-1.4, 0.58)
test(-1.4, 0.50)
test(-1.3, 0.65)
test(-1.2, 0.8)
test(-1.3, 0.8)
test(-1.4, 0.8)
test(-1.5, 0.8)
test(-1.5, 0.7)
test(-1.5, 0.65)
test(-1.5, 0.6)
test(-1.4, 0.58)
test(-1.4, 0.50)
data('iris')
m <- lm(Special.Width ~ Special.Length, data = iris, subset=Species=='setosa')
data('iris')
m <- lm(Special.Width ~ Special.Length, data = iris, subset=Species=='setosa')
View(iris)
m <- lm(Special.Width ~ Special.Length, data = iris, subset=Species=='setosa')
data('iris')
data(iris)
m <- lm(Special.Width ~ Special.Length, data = iris, subset=Species=='setosa')
m <- lm(Sepal.Width ~ Sepal.Length, data = iris, subset=Species=='setosa')
View(m)
m
call(m)
Call: m
lm(Sepal.Width ~ Sepal.Length, data = iris, subset=Species=='setosa')
summary(m)
summary(m)
test(-1.2, 0.8)
knitr::opts_chunk$set(echo = TRUE)
sample <- read.csv('sample.csv',  sep = '\t')
plot(y ~ x, data = sample)
beta0 <- -1
beta1 <- 1
sample$predict <- beta0 + beta1 * sample$x
sample$residual <- sample$predict - sample$y
mse <- mean(sample$residual^2)
mse
plot(y ~ x, data = sample)
lines(predict ~ x, data = sample, col = 'red')
test <- function(beta0, beta1) {
predict <- beta0 + beta1 * sample$x
resi <- predict - sample$y
mse <- mean(resi ^ 2)
print(mse)
}
test(-1, 0.9)
test(-1.2, 0.8)
test(-1.3, 0.8)
test(-1.4, 0.8)
test(-1.5, 0.8)
test(-1.5, 0.7)
test(-1.5, 0.65)
test(-1.5, 0.6)
test(-1.4, 0.58)
test(-1.4, 0.50)
test(-1.43, 0.50)
summary(m)
data(state)
state <- as.data.frame(state)
state <- as.data.frame(state.x77)
m <- lm(Income ~ Illiteracy, data = state)
summary(m)
state <- lm(Income ~ 'HS Grad' + Illiteracy, data = state)
m <- lm(Income ~ Illiteracy, data = state)
summary(m)
state <- as.data.frame(state.x77)
state_now <- lm(Income ~ 'HS Grad' + Illiteracy, data = state)
state_now <- lm(formula = Income ~ 'HS Grad' + Illiteracy, data = state)
state_now <- lm(Income ~ `HS Grad` + Illiteracy, data = state)
summary(state_now)
state_now <- lm(Income ~ `Life Exp`+`HS Grad` + Illiteracy, data = state)
data(iris)
summary(state_now)
summary(lm(Balance ~ Ethnicity, data = Credit))
data(Credit)
data('Credit')
head(MASS::Boston, 3)
head(MASS::Boston, 3)
head(MASS::Boston, 3)
boston <- as.matrix(MASS::Boston)
m <- lm(medv ~ ., data = boston)
m <- lm(medv ~ ., data = MASS::Boston)
m <- lm(medv ~ ., data = MASS::Boston)
summary(m)
head(MASS::Boston, 3)
boston_m <- as.matrix(MASS::Boston)
s <- lm(medv ~ rm, data = MASS::Boston)
summary(s)
View(boston)
head(MASS::Boston, 3)
boston <- MASS::Boston
m <- lm(medv ~ ., data = boston)
summary(m)
s <- lm(medv ~ rm, data = boston)
summary(s)
boston_m <- as.matrix(boston)
View(boston_m)
y <- as.matrix(boston$medv)
View(y)
y <- as.matrix(boston$medv)
solve(t(boston_m) %*% boston_m) %*% t(boston_m) %*% y
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
boston_l <- select(boston, -14)
View(boston_l)
boston_l <- select(boston, -14)
boston_mm <- as.matrix(boston_l)
boston_l <- select(boston, -14)
boston_mm <- as.matrix(boston_l)
solve(t(boston_mm) %*% boston_mm) %*% t(boston_mm) %*% y
m <- lm(medv ~ crim + zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio +
black + lstat, data = boston)
summary(m)
m <- lm(medv ~., data = boston)
summary(m)
m <- lm(medv ~., data = boston)
summary(m)
m <- lm(medv ~., data = boston)
summary(m)
m <- lm(medv ~ crim + zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio +
black + lstat, data = boston)
summary(m)
m <- lm(medv ~ crim + zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio +
black + lstat, data = boston)
summary(m)
m <- lm(medv ~., data = boston)
summary(m)
m <- lm(medv ~crim + zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio +
black + lstat, data = boston)
summary(m)
m <- lm(medv ~ ., data = boston)
summary(m)
m <- lm(medv ~ ., data = boston)
summary(m)
boston_m <- select(boston, -14)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
boston_m <- select(boston, -14)
head(MASS::Boston, 3)
boston <- MASS::Boston
m <- lm(medv ~ ., data = boston)
summary(m)
s <- lm(medv ~ rm, data = boston)
summary(s)
boston_m <- select(boston, -14)
boston_m <- select(boston, -14)
boston_m$one <- 1
View(boston_m)
boston_m <- select(boston, -14)
boston_m$one <- 1
boston_m <- as.matrix(boston_m)
y <- as.matrix(boston$medv)
solve(t(boston_m) %*% boston_m) %*% t(boston_m) %*% y
y <- as.matrix(boston$medv)
solve(t(boston_m) %*% boston_m) %*% t(boston_m) %*% y
boston_l <- select(boston, -14)
boston_mm <- as.matrix(boston_l)
solve(t(boston_mm) %*% boston_mm) %*% t(boston_mm) %*% y
setwd("~/")
setwd("~/Desktop/INFO474/Tooltips")
data <- read.csv('gapminder.csv')
View(data)
View(data)
data <- data %>% filter(year == '1980')
data <- filter(data, year == 1980)
data <- filter(data, 'year' == 1980)
library(dplyr)
data <- filter(data, year == 1980)
data <- filter(data, year = 1980)
data <- filter(data, year == 1980)
data <- filter(data, year == '1980')
data <- read.csv('gapminder.csv')
data <- filter(data, year == '1980')
View(data)
write.csv(data, 'data.csv')
